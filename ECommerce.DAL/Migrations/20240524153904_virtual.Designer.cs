// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240524153904_virtual")]
    partial class @virtual
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 240, DateTimeKind.Local).AddTicks(9985),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("46823ac9-be03-4429-95d8-fc97788846f9"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 241, DateTimeKind.Local).AddTicks(2636),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("a77d8b33-de7f-4344-82c0-6b99550ee15b"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 241, DateTimeKind.Local).AddTicks(4222),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("9301e476-774b-415d-9608-dee13c808b23"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 242, DateTimeKind.Local).AddTicks(8418),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=742",
                            IsActive = true,
                            MasterId = new Guid("478db1db-f370-4c3d-844b-992844dbbb53"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 743.57m,
                            UnitsInStock = (short)38
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(227),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1053",
                            IsActive = true,
                            MasterId = new Guid("f6ecfdd2-c679-497e-a2c8-57c978f7c153"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 22.91m,
                            UnitsInStock = (short)98
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(1794),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=247",
                            IsActive = true,
                            MasterId = new Guid("2dd25fed-66b3-4b6f-bb23-6373d7715fd6"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 934.20m,
                            UnitsInStock = (short)81
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(3285),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=778",
                            IsActive = true,
                            MasterId = new Guid("87f39d54-58ab-466a-b527-438abfe052d5"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 218.14m,
                            UnitsInStock = (short)45
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(4743),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1060",
                            IsActive = true,
                            MasterId = new Guid("e8253b60-046c-4f0f-82ec-ebe19ddb9281"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 359.88m,
                            UnitsInStock = (short)32
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(6197),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=161",
                            IsActive = true,
                            MasterId = new Guid("fa641415-a870-472c-ac6a-44981e9b2c1a"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 774.14m,
                            UnitsInStock = (short)39
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(7626),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=265",
                            IsActive = true,
                            MasterId = new Guid("9fb6dea5-6e07-4755-b90c-a90a66486370"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 391.03m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 243, DateTimeKind.Local).AddTicks(9043),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=976",
                            IsActive = true,
                            MasterId = new Guid("c366263b-fa0b-4cca-9b4a-20030d119499"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 926.17m,
                            UnitsInStock = (short)99
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(467),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=764",
                            IsActive = true,
                            MasterId = new Guid("8e7db928-74a2-49a2-82e7-67b40b084242"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 228.02m,
                            UnitsInStock = (short)60
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(1894),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=494",
                            IsActive = true,
                            MasterId = new Guid("5d9806e7-fa2b-49b6-9b2e-19c9daf7ea74"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 385.10m,
                            UnitsInStock = (short)55
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(3307),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1019",
                            IsActive = true,
                            MasterId = new Guid("4f27a0f4-fb37-4cc5-a579-ecf3fd7648f2"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 126.25m,
                            UnitsInStock = (short)98
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(4741),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=663",
                            IsActive = true,
                            MasterId = new Guid("766c3290-3607-4e14-aae6-ae74b144c160"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 901.52m,
                            UnitsInStock = (short)40
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(6156),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=702",
                            IsActive = true,
                            MasterId = new Guid("3755cdda-87ce-44aa-bbd5-873424c3e146"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 885.82m,
                            UnitsInStock = (short)37
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(7555),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=755",
                            IsActive = true,
                            MasterId = new Guid("c4eadc16-1666-4e2f-9501-71dc4393677e"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 691.36m,
                            UnitsInStock = (short)53
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 244, DateTimeKind.Local).AddTicks(8953),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1009",
                            IsActive = true,
                            MasterId = new Guid("e1b246bf-4d5b-4072-93c9-8feac5437250"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 756.64m,
                            UnitsInStock = (short)60
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(356),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=788",
                            IsActive = true,
                            MasterId = new Guid("8f211010-1b1a-4ff4-bd76-fba4d74e1487"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 965.84m,
                            UnitsInStock = (short)6
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(1753),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=903",
                            IsActive = true,
                            MasterId = new Guid("eb413557-9f83-4b69-993e-5c6a0548f771"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 689.40m,
                            UnitsInStock = (short)9
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(3172),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=861",
                            IsActive = true,
                            MasterId = new Guid("d21d1cde-e289-4d34-9e0d-b55098c13be1"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 948.93m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(4603),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=568",
                            IsActive = true,
                            MasterId = new Guid("6236c0f1-ec76-4496-807c-c2d1c1e5c521"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 529.22m,
                            UnitsInStock = (short)49
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(5995),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=966",
                            IsActive = true,
                            MasterId = new Guid("8634030c-9cd5-41e6-a52c-43c3b20830ab"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 126.70m,
                            UnitsInStock = (short)50
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(7395),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1058",
                            IsActive = true,
                            MasterId = new Guid("e8c42c62-a684-4c89-aaa2-373c2b77a1f4"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 734.55m,
                            UnitsInStock = (short)77
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 245, DateTimeKind.Local).AddTicks(8794),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=636",
                            IsActive = true,
                            MasterId = new Guid("8bd39b11-8584-4253-9172-079a499d5f5c"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 633.40m,
                            UnitsInStock = (short)65
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(176),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=382",
                            IsActive = true,
                            MasterId = new Guid("f86113f3-0d8f-4aa2-8f29-479a11d1543a"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 804.98m,
                            UnitsInStock = (short)77
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(1560),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=2",
                            IsActive = true,
                            MasterId = new Guid("239c83e2-040b-44d8-9cf4-956c67796726"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 25.18m,
                            UnitsInStock = (short)40
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(2966),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=606",
                            IsActive = true,
                            MasterId = new Guid("4d1291e7-f4db-4e60-ba50-5efa97904ab1"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 53.33m,
                            UnitsInStock = (short)29
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(4375),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=171",
                            IsActive = true,
                            MasterId = new Guid("8ded2b3a-7ae7-4d19-bc01-4302a1351498"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 398.51m,
                            UnitsInStock = (short)95
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(5785),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=807",
                            IsActive = true,
                            MasterId = new Guid("70c5efd7-f484-4618-985e-21123629af93"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 462.05m,
                            UnitsInStock = (short)9
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(7169),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=117",
                            IsActive = true,
                            MasterId = new Guid("40987884-3df4-475c-b52d-e40da26d5310"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 149.59m,
                            UnitsInStock = (short)28
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(8560),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=250",
                            IsActive = true,
                            MasterId = new Guid("f0ce37f6-3224-4f65-b2db-1c8f00d88dfc"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 407.52m,
                            UnitsInStock = (short)24
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 246, DateTimeKind.Local).AddTicks(9963),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=11",
                            IsActive = true,
                            MasterId = new Guid("b523c29e-3738-430e-99b0-dc31d077c34c"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 487.90m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(1369),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=558",
                            IsActive = true,
                            MasterId = new Guid("576bbe44-e2b0-43a9-a942-29f8c3075a6c"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 858.39m,
                            UnitsInStock = (short)37
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(2761),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=221",
                            IsActive = true,
                            MasterId = new Guid("29a6fabd-30ce-4e10-87a9-f27bbc9d44c0"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 775.82m,
                            UnitsInStock = (short)48
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(4162),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=0",
                            IsActive = true,
                            MasterId = new Guid("fb12a40c-6527-4839-a65e-576f37d93401"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 224.11m,
                            UnitsInStock = (short)57
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(6167),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("679e5a58-9151-4ff8-8607-1c4334e299b4"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(7591),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("3f0205fc-b9d3-44bc-975a-bd4c2ca591da"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 24, 18, 39, 4, 247, DateTimeKind.Local).AddTicks(8958),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("1eb51741-d528-489b-98c6-9117ff0277e0"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
