// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    partial class ECommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 660, DateTimeKind.Local).AddTicks(8105),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("0cb5bfdc-a8ed-4a0d-b59f-9be7d9be3a53"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 661, DateTimeKind.Local).AddTicks(1053),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("8bfcb228-58cf-4113-9d8f-613a8587b114"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 661, DateTimeKind.Local).AddTicks(2689),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("541f2144-0e45-44a1-80bb-e5ea9bd44a13"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 662, DateTimeKind.Local).AddTicks(7582),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=896",
                            IsActive = true,
                            MasterId = new Guid("4d126777-000c-40ba-8a42-22fe1c360bd9"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 638.70m,
                            UnitsInStock = (short)91
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 662, DateTimeKind.Local).AddTicks(9451),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=912",
                            IsActive = true,
                            MasterId = new Guid("ca2b9457-d191-42a1-ae6f-27da365e8a36"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 233.30m,
                            UnitsInStock = (short)5
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(1075),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=191",
                            IsActive = true,
                            MasterId = new Guid("da0488a7-88ec-4e8e-8d67-85a99c3ddeb1"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 970.78m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(2656),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=902",
                            IsActive = true,
                            MasterId = new Guid("f5dcec2d-e116-4699-b5d2-6df985c092e5"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 461.36m,
                            UnitsInStock = (short)41
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(4198),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1012",
                            IsActive = true,
                            MasterId = new Guid("5fdcc11e-7590-413d-bb43-b8635ef28d59"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 72.24m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(5774),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1069",
                            IsActive = true,
                            MasterId = new Guid("ec42c6e8-00a0-487a-abb9-1c2c32de438f"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 252.09m,
                            UnitsInStock = (short)99
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(7298),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=253",
                            IsActive = true,
                            MasterId = new Guid("6036cc5e-bad5-4508-a599-80fe89d147f4"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 427.46m,
                            UnitsInStock = (short)9
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 663, DateTimeKind.Local).AddTicks(8826),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=790",
                            IsActive = true,
                            MasterId = new Guid("12edf0e9-d622-49f2-9b2b-576d42009557"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 888.31m,
                            UnitsInStock = (short)73
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(333),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=858",
                            IsActive = true,
                            MasterId = new Guid("1014c96c-09a5-4068-99f4-9a6158901835"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 310.44m,
                            UnitsInStock = (short)39
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(1841),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=299",
                            IsActive = true,
                            MasterId = new Guid("2dcd09a0-a8cd-4d35-96c2-959b9038fd85"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 344.61m,
                            UnitsInStock = (short)80
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(3343),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=145",
                            IsActive = true,
                            MasterId = new Guid("5fde1828-79ea-45f3-91d6-eb3d08e79be4"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 362.38m,
                            UnitsInStock = (short)46
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(5194),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=38",
                            IsActive = true,
                            MasterId = new Guid("84f8a882-4cad-441e-ac15-274f514d9c93"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 317.85m,
                            UnitsInStock = (short)31
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(6789),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=68",
                            IsActive = true,
                            MasterId = new Guid("77adaa18-5b38-4e1b-9a91-cb725c2d24e4"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 271.27m,
                            UnitsInStock = (short)77
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(8325),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=782",
                            IsActive = true,
                            MasterId = new Guid("3d31a329-e774-4e9b-93c2-4b7cae53433f"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 424.11m,
                            UnitsInStock = (short)6
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 664, DateTimeKind.Local).AddTicks(9853),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=314",
                            IsActive = true,
                            MasterId = new Guid("800c3df4-5590-4fa6-be7f-f75d97f6bee1"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 798.88m,
                            UnitsInStock = (short)31
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(1432),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=35",
                            IsActive = true,
                            MasterId = new Guid("ad98bb01-d52b-4ed6-a487-4e8943fb1936"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 579.27m,
                            UnitsInStock = (short)41
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(2958),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=830",
                            IsActive = true,
                            MasterId = new Guid("51b8ea9c-b38d-459c-b4cf-ad84db21d547"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 696.47m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(4481),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=747",
                            IsActive = true,
                            MasterId = new Guid("377ef9d9-9c6b-45d4-9d44-1523652f08b8"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 106.08m,
                            UnitsInStock = (short)100
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(5977),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=111",
                            IsActive = true,
                            MasterId = new Guid("1af9116e-8676-475c-95f0-651eb7d4bdd3"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 78.40m,
                            UnitsInStock = (short)25
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(7477),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=862",
                            IsActive = true,
                            MasterId = new Guid("86c1dcca-d237-4c20-a4cb-30ef4f958233"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 791.58m,
                            UnitsInStock = (short)38
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 665, DateTimeKind.Local).AddTicks(8958),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=683",
                            IsActive = true,
                            MasterId = new Guid("9f1d1323-dfc4-450e-a667-5521051e2e1f"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 823.51m,
                            UnitsInStock = (short)19
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(448),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=917",
                            IsActive = true,
                            MasterId = new Guid("a855f2d0-eac3-4530-9e4d-35bc63fedb22"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 946.58m,
                            UnitsInStock = (short)43
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(1920),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=216",
                            IsActive = true,
                            MasterId = new Guid("19fe2d70-a7cb-4e25-bd01-4e3c4c047af1"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 489.91m,
                            UnitsInStock = (short)52
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(3398),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=633",
                            IsActive = true,
                            MasterId = new Guid("025b4c59-667e-4cb5-a7a2-568a84401b6e"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 961.31m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(4894),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=971",
                            IsActive = true,
                            MasterId = new Guid("8dfec975-d3e5-4b4f-baca-028ecb0356c7"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 762.82m,
                            UnitsInStock = (short)7
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(6371),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=419",
                            IsActive = true,
                            MasterId = new Guid("9b8cd0ba-65ef-4cdb-9c01-684a47fe223c"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 748.94m,
                            UnitsInStock = (short)76
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(7841),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=442",
                            IsActive = true,
                            MasterId = new Guid("50db70e2-7c7b-4317-be54-a411dd2a0c12"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 635.50m,
                            UnitsInStock = (short)71
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 666, DateTimeKind.Local).AddTicks(9334),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=125",
                            IsActive = true,
                            MasterId = new Guid("95234fe6-bfcc-4b14-9538-881792d500ce"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 843.14m,
                            UnitsInStock = (short)2
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(808),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=630",
                            IsActive = true,
                            MasterId = new Guid("5bdda9db-63d3-41dd-9798-74f673677318"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 133.12m,
                            UnitsInStock = (short)88
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(2286),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=38",
                            IsActive = true,
                            MasterId = new Guid("6add8ef4-d8c4-4bd6-ad08-8f506d50c04f"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 39.56m,
                            UnitsInStock = (short)61
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(3776),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=442",
                            IsActive = true,
                            MasterId = new Guid("06426ded-063e-493c-96d3-b0a53df790d8"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 125.43m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(5395),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=849",
                            IsActive = true,
                            MasterId = new Guid("53f26ef4-0e57-4a20-97be-86a41c9281c6"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 253.16m,
                            UnitsInStock = (short)52
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(6892),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=80",
                            IsActive = true,
                            MasterId = new Guid("fa1470e9-4791-42b7-b049-b413c6ba208e"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 508.28m,
                            UnitsInStock = (short)18
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 667, DateTimeKind.Local).AddTicks(9099),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("659354be-78d3-41f7-8d65-6129a434ed70"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 668, DateTimeKind.Local).AddTicks(618),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("db2d2e68-b01d-484d-888e-7818a5ac47e0"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 2, 25, 45, 668, DateTimeKind.Local).AddTicks(2085),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("537e6f1d-8dd5-47ee-b3ad-5e9cc2283a2d"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
