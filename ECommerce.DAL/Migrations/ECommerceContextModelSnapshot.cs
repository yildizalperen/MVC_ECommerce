// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    partial class ECommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 882, DateTimeKind.Local).AddTicks(3305),
                            CreatedIpAddress = "192.168.1.31",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("eaae78fd-5e98-4034-a168-7a8474732452"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 882, DateTimeKind.Local).AddTicks(6074),
                            CreatedIpAddress = "192.168.1.31",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("3731f474-725e-4b25-849a-ee1f7b79f925"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 882, DateTimeKind.Local).AddTicks(7753),
                            CreatedIpAddress = "192.168.1.31",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("c96be295-7d78-4565-a07d-299adeeb3939"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 884, DateTimeKind.Local).AddTicks(2539),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=56",
                            IsActive = true,
                            MasterId = new Guid("9694f04c-a593-4a2a-be4a-a347764598ca"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 849.30m,
                            UnitsInStock = (short)6
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 884, DateTimeKind.Local).AddTicks(4455),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=127",
                            IsActive = true,
                            MasterId = new Guid("d5f89680-bb8b-40a2-93cc-125c17d15c39"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 531.07m,
                            UnitsInStock = (short)33
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 884, DateTimeKind.Local).AddTicks(6214),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=342",
                            IsActive = true,
                            MasterId = new Guid("7b89c4ad-d30f-405b-b876-41ad7e94f48c"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 249.90m,
                            UnitsInStock = (short)92
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 884, DateTimeKind.Local).AddTicks(8496),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=672",
                            IsActive = true,
                            MasterId = new Guid("ad5fe80c-d018-4790-87c7-8fd612df3cfd"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 959.55m,
                            UnitsInStock = (short)35
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(299),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=695",
                            IsActive = true,
                            MasterId = new Guid("2018c039-b1ae-47ae-85a5-62c7baaac877"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 364.15m,
                            UnitsInStock = (short)87
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(1910),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=423",
                            IsActive = true,
                            MasterId = new Guid("9935587b-c569-400d-aa2f-e4aaea037cb2"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 374.56m,
                            UnitsInStock = (short)27
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(3479),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=539",
                            IsActive = true,
                            MasterId = new Guid("3f108704-7d5d-4943-8e3d-316779d7cf25"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 272.85m,
                            UnitsInStock = (short)75
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(5026),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=486",
                            IsActive = true,
                            MasterId = new Guid("48433d6b-6220-44e4-9c9a-2bd76634d1f8"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 502.66m,
                            UnitsInStock = (short)40
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(6701),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=428",
                            IsActive = true,
                            MasterId = new Guid("efc76e78-dd06-439d-9054-abd354aaa7de"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 404.27m,
                            UnitsInStock = (short)56
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(8251),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=549",
                            IsActive = true,
                            MasterId = new Guid("e94c1036-b834-49e2-846d-80b6c3c6f7a8"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 871.75m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 885, DateTimeKind.Local).AddTicks(9791),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=900",
                            IsActive = true,
                            MasterId = new Guid("447faeeb-57af-4c8c-b7cc-6e9fdd86bd00"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 573.54m,
                            UnitsInStock = (short)97
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(1319),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=938",
                            IsActive = true,
                            MasterId = new Guid("e124cf8e-b9f5-4df2-87a7-20457be93212"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 188.32m,
                            UnitsInStock = (short)64
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(2832),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=577",
                            IsActive = true,
                            MasterId = new Guid("42c9595c-8f65-4b0f-9b37-893b6c236d1b"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 264.05m,
                            UnitsInStock = (short)10
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(4335),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=438",
                            IsActive = true,
                            MasterId = new Guid("423b6d92-97e8-4827-8a88-0eaf8483f029"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 15.03m,
                            UnitsInStock = (short)80
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(5844),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=415",
                            IsActive = true,
                            MasterId = new Guid("ba7cbf5b-557a-4275-a229-f436cf75ba56"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 102.08m,
                            UnitsInStock = (short)40
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(7376),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=895",
                            IsActive = true,
                            MasterId = new Guid("f8831f82-bab1-4873-bb93-4487b88f3200"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 183.33m,
                            UnitsInStock = (short)88
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 886, DateTimeKind.Local).AddTicks(8875),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=683",
                            IsActive = true,
                            MasterId = new Guid("5836a734-7455-4d34-a2ac-3353109b1607"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 192.71m,
                            UnitsInStock = (short)54
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(486),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=640",
                            IsActive = true,
                            MasterId = new Guid("a438ebf3-ee5f-442b-9b80-b5d973c41bcd"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 146.08m,
                            UnitsInStock = (short)28
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(2006),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=799",
                            IsActive = true,
                            MasterId = new Guid("241e9263-a0ac-41db-af73-9ca5e027b4d9"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 354.90m,
                            UnitsInStock = (short)1
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(3511),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=1083",
                            IsActive = true,
                            MasterId = new Guid("72e0f9e0-faef-4ff1-b9df-2b179d449952"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 621.35m,
                            UnitsInStock = (short)15
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(5022),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=889",
                            IsActive = true,
                            MasterId = new Guid("758dda50-1a5f-4d5f-bb1c-7747f174195d"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 693.30m,
                            UnitsInStock = (short)47
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(6543),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=137",
                            IsActive = true,
                            MasterId = new Guid("65986db2-715d-4319-ba37-787f9f448810"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 155.07m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(8054),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=929",
                            IsActive = true,
                            MasterId = new Guid("45961c16-e9d7-4572-93a2-a015e4ed4382"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 929.76m,
                            UnitsInStock = (short)28
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 887, DateTimeKind.Local).AddTicks(9555),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=334",
                            IsActive = true,
                            MasterId = new Guid("1320c3b7-95ef-49e7-a3d1-89e9cc708c03"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 358.64m,
                            UnitsInStock = (short)64
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(1056),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=714",
                            IsActive = true,
                            MasterId = new Guid("fd59c6fc-c855-4fbf-af80-63989d7b7033"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 601.51m,
                            UnitsInStock = (short)35
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(2558),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=78",
                            IsActive = true,
                            MasterId = new Guid("72887347-540a-481b-8dfd-47c809c48ce2"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 906.71m,
                            UnitsInStock = (short)14
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(4050),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=789",
                            IsActive = true,
                            MasterId = new Guid("8fcd700b-1afb-40bd-b9f4-964ab3127d95"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 746.05m,
                            UnitsInStock = (short)6
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(5532),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=713",
                            IsActive = true,
                            MasterId = new Guid("30b05575-9df2-4c4a-b3ad-732c0c862aaa"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 811.51m,
                            UnitsInStock = (short)15
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(7059),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=10",
                            IsActive = true,
                            MasterId = new Guid("19e033fc-9bfc-43f9-bafe-4adccd2e4eff"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 404.93m,
                            UnitsInStock = (short)1
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 888, DateTimeKind.Local).AddTicks(8548),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=44",
                            IsActive = true,
                            MasterId = new Guid("7d2c95b8-3056-4dc4-8344-4bc97831fe14"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 496.87m,
                            UnitsInStock = (short)33
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(32),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=572",
                            IsActive = true,
                            MasterId = new Guid("b05bb36a-5470-4f94-844b-ab694d7605a4"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 512.76m,
                            UnitsInStock = (short)71
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(1512),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=576",
                            IsActive = true,
                            MasterId = new Guid("87f74ae8-dce2-46ce-aea7-f405feef22ca"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 824.12m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(3016),
                            CreatedIpAddress = "192.168.1.31",
                            ImagePath = "https://picsum.photos/640/480/?image=642",
                            IsActive = true,
                            MasterId = new Guid("3cb1d6e7-3d80-404a-a043-237cb9ec0984"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 79.50m,
                            UnitsInStock = (short)34
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(5514),
                            CreatedIpAddress = "192.168.1.31",
                            IsActive = true,
                            MasterId = new Guid("465f41d1-752d-42a9-81d3-b7965f984929"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(7082),
                            CreatedIpAddress = "192.168.1.31",
                            IsActive = true,
                            MasterId = new Guid("8c73097a-4756-46fe-913c-9c2e3fb45963"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 23, 15, 57, 56, 889, DateTimeKind.Local).AddTicks(8663),
                            CreatedIpAddress = "192.168.1.31",
                            IsActive = true,
                            MasterId = new Guid("85578b48-006c-4b19-a1de-45ddf9a2b1db"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
