// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.MVC.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240527091343_created")]
    partial class created
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 719, DateTimeKind.Local).AddTicks(2538),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("be70ad7e-4d03-42b6-a537-4d673b7daf09"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 719, DateTimeKind.Local).AddTicks(6976),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("9d74b845-6972-4ad8-a773-0ed2c19bff29"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 719, DateTimeKind.Local).AddTicks(9674),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("034b3f36-d6f4-4623-aa7c-5ab10c3a5bc4"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 723, DateTimeKind.Local).AddTicks(7656),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=164",
                            IsActive = true,
                            MasterId = new Guid("2f0ccf35-470a-499e-b52c-f1b83431bbc1"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 886.27m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 724, DateTimeKind.Local).AddTicks(2302),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1026",
                            IsActive = true,
                            MasterId = new Guid("d0738ef6-0bdd-4609-9078-97578fdfe139"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 478.50m,
                            UnitsInStock = (short)88
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 724, DateTimeKind.Local).AddTicks(4979),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=955",
                            IsActive = true,
                            MasterId = new Guid("4c33a694-3b66-49ea-880c-e260a3fa057a"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 826.22m,
                            UnitsInStock = (short)45
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 724, DateTimeKind.Local).AddTicks(7453),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=836",
                            IsActive = true,
                            MasterId = new Guid("9fa0059e-80b6-4bda-b469-48d4a1557a2c"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 249.84m,
                            UnitsInStock = (short)55
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 725, DateTimeKind.Local).AddTicks(117),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=530",
                            IsActive = true,
                            MasterId = new Guid("65938660-8ee5-42cc-a507-2f0e13fcfb2b"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 938.93m,
                            UnitsInStock = (short)48
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 725, DateTimeKind.Local).AddTicks(2445),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=844",
                            IsActive = true,
                            MasterId = new Guid("9de3e20e-2e66-4d18-9acc-410fb7e029d0"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 162.69m,
                            UnitsInStock = (short)27
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 725, DateTimeKind.Local).AddTicks(4756),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=528",
                            IsActive = true,
                            MasterId = new Guid("cac9de29-4e08-4024-bcf9-b69d4c69e372"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 833.33m,
                            UnitsInStock = (short)54
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 725, DateTimeKind.Local).AddTicks(7000),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=530",
                            IsActive = true,
                            MasterId = new Guid("6160bc5d-4a46-46d2-b491-8b93309eee17"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 554.08m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 725, DateTimeKind.Local).AddTicks(9338),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=846",
                            IsActive = true,
                            MasterId = new Guid("b1f4e4ab-1b19-4ca6-aedc-a12208f70cd6"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 887.12m,
                            UnitsInStock = (short)30
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 726, DateTimeKind.Local).AddTicks(1630),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=397",
                            IsActive = true,
                            MasterId = new Guid("269b0856-a4e0-4471-8e09-bc50399301d0"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 705.80m,
                            UnitsInStock = (short)93
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 726, DateTimeKind.Local).AddTicks(3917),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=74",
                            IsActive = true,
                            MasterId = new Guid("1abb2bc6-2626-43d0-8c60-108aae66a254"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 741.09m,
                            UnitsInStock = (short)99
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 726, DateTimeKind.Local).AddTicks(6181),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=474",
                            IsActive = true,
                            MasterId = new Guid("b0df5d56-75f7-4faf-bcca-05aa2630f675"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 664.48m,
                            UnitsInStock = (short)75
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 726, DateTimeKind.Local).AddTicks(8448),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=758",
                            IsActive = true,
                            MasterId = new Guid("9a5fba84-59ba-45f3-8aad-6fe6ffab7871"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 320.57m,
                            UnitsInStock = (short)96
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 727, DateTimeKind.Local).AddTicks(730),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=956",
                            IsActive = true,
                            MasterId = new Guid("6d146fa7-5f10-4afc-b2b9-264fcec6eb05"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 872.74m,
                            UnitsInStock = (short)70
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 727, DateTimeKind.Local).AddTicks(3081),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=100",
                            IsActive = true,
                            MasterId = new Guid("4d01eafa-8e68-4eef-a246-207ffbda075d"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 690.60m,
                            UnitsInStock = (short)24
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 727, DateTimeKind.Local).AddTicks(5335),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=16",
                            IsActive = true,
                            MasterId = new Guid("70a01dcf-28e4-400d-aa7d-805b31d739df"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 456.36m,
                            UnitsInStock = (short)4
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 727, DateTimeKind.Local).AddTicks(7546),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=521",
                            IsActive = true,
                            MasterId = new Guid("2279c022-1a65-4bc6-a61b-8fb423f74cdc"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 259.30m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 727, DateTimeKind.Local).AddTicks(9778),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=802",
                            IsActive = true,
                            MasterId = new Guid("2d49adb9-d402-46ec-8557-367bfe63c660"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 716.67m,
                            UnitsInStock = (short)91
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 728, DateTimeKind.Local).AddTicks(1991),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=789",
                            IsActive = true,
                            MasterId = new Guid("8f5f1740-e7a7-4909-b5b3-7273f0cc61e9"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 483.96m,
                            UnitsInStock = (short)34
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 728, DateTimeKind.Local).AddTicks(4191),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=555",
                            IsActive = true,
                            MasterId = new Guid("d106fd0a-60f6-487b-965a-528953214cb9"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 114.49m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 728, DateTimeKind.Local).AddTicks(6423),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=629",
                            IsActive = true,
                            MasterId = new Guid("14ca9e0a-69a4-45e3-bb45-0a918bd6439b"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 292.94m,
                            UnitsInStock = (short)14
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 728, DateTimeKind.Local).AddTicks(8629),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=891",
                            IsActive = true,
                            MasterId = new Guid("4c5912a8-ec77-4440-bd6f-e6ae8030c696"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 17.11m,
                            UnitsInStock = (short)30
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 729, DateTimeKind.Local).AddTicks(867),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=33",
                            IsActive = true,
                            MasterId = new Guid("f83c1a4b-0b1b-49b2-8d2d-0c9ded8092fb"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 317.94m,
                            UnitsInStock = (short)54
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 729, DateTimeKind.Local).AddTicks(3083),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=79",
                            IsActive = true,
                            MasterId = new Guid("1deca4b0-2321-4398-a189-1fffc5cdc43e"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 287.72m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 729, DateTimeKind.Local).AddTicks(5279),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1007",
                            IsActive = true,
                            MasterId = new Guid("bef296e2-77ac-4476-9d9e-a302766a3587"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 426.62m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 729, DateTimeKind.Local).AddTicks(7477),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=930",
                            IsActive = true,
                            MasterId = new Guid("dd1416b7-4338-4af6-bdff-4883be9727fb"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 76.73m,
                            UnitsInStock = (short)13
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 730, DateTimeKind.Local).AddTicks(5),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=459",
                            IsActive = true,
                            MasterId = new Guid("6c080125-b24f-410a-aba1-96419aaef33a"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 787.46m,
                            UnitsInStock = (short)39
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 730, DateTimeKind.Local).AddTicks(2246),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=760",
                            IsActive = true,
                            MasterId = new Guid("2ddfdf32-0e67-4947-b924-06b59c32090b"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 135.49m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 730, DateTimeKind.Local).AddTicks(4443),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=349",
                            IsActive = true,
                            MasterId = new Guid("e4cd0b3a-450a-4d32-a7a3-df9870e375fe"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 429.97m,
                            UnitsInStock = (short)18
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 730, DateTimeKind.Local).AddTicks(6626),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=281",
                            IsActive = true,
                            MasterId = new Guid("9bd2b70c-aac7-44f8-a2ac-05b5a736b90c"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 573.96m,
                            UnitsInStock = (short)84
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 730, DateTimeKind.Local).AddTicks(8845),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=12",
                            IsActive = true,
                            MasterId = new Guid("e9ad9dd3-2715-42ee-b18a-9725fd578b2d"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 216.50m,
                            UnitsInStock = (short)26
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 731, DateTimeKind.Local).AddTicks(1070),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1008",
                            IsActive = true,
                            MasterId = new Guid("f355ccf5-69df-41a5-b5f9-97779cbc2f73"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 286.85m,
                            UnitsInStock = (short)93
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 731, DateTimeKind.Local).AddTicks(3341),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=364",
                            IsActive = true,
                            MasterId = new Guid("e58d2cb1-b849-4dd1-8ea9-f78ac9fbc0a8"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 815.30m,
                            UnitsInStock = (short)84
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 731, DateTimeKind.Local).AddTicks(7800),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("40f77b61-573d-4f6b-8254-97745cb6d420"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 732, DateTimeKind.Local).AddTicks(18),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("c1bb4b9c-40ce-4676-b8cd-d92f1fda6ac2"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 12, 13, 42, 732, DateTimeKind.Local).AddTicks(2089),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("0cf68cf1-7e94-4170-9064-084c0c992e7c"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
