// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240526213521_test4")]
    partial class test4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 699, DateTimeKind.Local).AddTicks(7344),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("d46e50ab-8925-4435-986c-b97a631c7ec6"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 700, DateTimeKind.Local).AddTicks(63),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("1e03340e-d99d-4769-973b-6790d83ca6c7"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 700, DateTimeKind.Local).AddTicks(1694),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("5d05f597-3f83-46d2-9987-82eba4d8be57"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 701, DateTimeKind.Local).AddTicks(6292),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=28",
                            IsActive = true,
                            MasterId = new Guid("57632bb2-3b6f-4264-b296-befa6c972b12"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 442.59m,
                            UnitsInStock = (short)90
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 701, DateTimeKind.Local).AddTicks(8214),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=686",
                            IsActive = true,
                            MasterId = new Guid("2427a31b-cb47-44bd-837a-a31b7002d39b"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 625.11m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 701, DateTimeKind.Local).AddTicks(9852),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=581",
                            IsActive = true,
                            MasterId = new Guid("3bd72d12-a29b-42f5-93a8-fee800bcf68f"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 253.25m,
                            UnitsInStock = (short)9
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(1454),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=894",
                            IsActive = true,
                            MasterId = new Guid("e0ce6092-c523-4ff7-8a89-43a2725d0298"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 789.57m,
                            UnitsInStock = (short)53
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(3026),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=479",
                            IsActive = true,
                            MasterId = new Guid("88785ae8-042a-4090-8d61-759853f903ef"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 369.85m,
                            UnitsInStock = (short)13
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(4592),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=224",
                            IsActive = true,
                            MasterId = new Guid("b1d18f71-865e-4b46-bc50-282ee84eb720"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 355.57m,
                            UnitsInStock = (short)24
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(6404),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=423",
                            IsActive = true,
                            MasterId = new Guid("a5fc5cbf-57f2-4dc0-b7cc-ad4b825edf46"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 670.10m,
                            UnitsInStock = (short)40
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(7982),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=522",
                            IsActive = true,
                            MasterId = new Guid("b4daa563-a8ff-4ffa-be95-244258618d52"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 580.22m,
                            UnitsInStock = (short)92
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 702, DateTimeKind.Local).AddTicks(9526),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=367",
                            IsActive = true,
                            MasterId = new Guid("fa0fd2b7-0762-430a-a855-ae24be971ba8"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 620.98m,
                            UnitsInStock = (short)8
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(1067),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=521",
                            IsActive = true,
                            MasterId = new Guid("e7d54116-fd37-4c00-b81b-b70e63e6bd47"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 390.86m,
                            UnitsInStock = (short)66
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(2597),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=27",
                            IsActive = true,
                            MasterId = new Guid("7f0a26c3-6a9e-4981-9fb4-1b0f93948cb1"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 374.36m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(4106),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=653",
                            IsActive = true,
                            MasterId = new Guid("a6a6bc13-c3aa-42b2-a70e-c28aff17da3e"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 150.04m,
                            UnitsInStock = (short)50
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(5604),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=927",
                            IsActive = true,
                            MasterId = new Guid("f107eeff-0f55-4720-ad0c-153e74c0ae27"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 594.92m,
                            UnitsInStock = (short)56
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(7122),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=62",
                            IsActive = true,
                            MasterId = new Guid("347f9418-aba1-4a2b-8b6f-21e10a8e55da"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 585.96m,
                            UnitsInStock = (short)31
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 703, DateTimeKind.Local).AddTicks(8614),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=270",
                            IsActive = true,
                            MasterId = new Guid("bc2c2b84-bb0c-400e-97fa-e5eae4dc5bac"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 117.88m,
                            UnitsInStock = (short)60
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(117),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=82",
                            IsActive = true,
                            MasterId = new Guid("93a4c3b2-f4b9-42cf-85d0-57e1b25150b8"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 60.82m,
                            UnitsInStock = (short)93
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(1616),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=468",
                            IsActive = true,
                            MasterId = new Guid("58eeb8a4-5b57-422e-b548-9f6b2868b071"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 562.54m,
                            UnitsInStock = (short)96
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(3135),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=357",
                            IsActive = true,
                            MasterId = new Guid("22e25bb9-8f06-4efb-9957-21ca191e1a41"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 762.25m,
                            UnitsInStock = (short)56
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(4629),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1013",
                            IsActive = true,
                            MasterId = new Guid("55ee22ab-caf4-4bdd-bf38-0bb1c722f061"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 500.65m,
                            UnitsInStock = (short)82
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(6130),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=714",
                            IsActive = true,
                            MasterId = new Guid("f51595ad-cf0c-4cd6-a1eb-bdba8f52c777"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 485.85m,
                            UnitsInStock = (short)44
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(7621),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=141",
                            IsActive = true,
                            MasterId = new Guid("5e741c08-4dde-48a1-8b70-16664ad21278"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 766.87m,
                            UnitsInStock = (short)63
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 704, DateTimeKind.Local).AddTicks(9134),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1062",
                            IsActive = true,
                            MasterId = new Guid("3558011b-83a7-4e81-9eb4-fe3409cd7049"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 694.48m,
                            UnitsInStock = (short)44
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(626),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=44",
                            IsActive = true,
                            MasterId = new Guid("be8f2a5f-beb7-4d12-bb23-280a9f28270a"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 235.56m,
                            UnitsInStock = (short)10
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(2123),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=265",
                            IsActive = true,
                            MasterId = new Guid("2926cbad-df4b-4cc8-9de6-cddc6e84e0ad"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 295.47m,
                            UnitsInStock = (short)66
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(3734),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=470",
                            IsActive = true,
                            MasterId = new Guid("89fc964d-414d-440e-a843-f9ea8e6553ca"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 515.73m,
                            UnitsInStock = (short)65
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(5232),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=941",
                            IsActive = true,
                            MasterId = new Guid("d07b3cec-5ec0-431f-9ce1-4a702974039d"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 782.07m,
                            UnitsInStock = (short)34
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(6730),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=476",
                            IsActive = true,
                            MasterId = new Guid("db19451d-c3f2-422c-9ef9-99932f11e76f"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 743.21m,
                            UnitsInStock = (short)88
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(8222),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=328",
                            IsActive = true,
                            MasterId = new Guid("a9925d11-3a37-440d-be27-c34accc59088"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 904.62m,
                            UnitsInStock = (short)20
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 705, DateTimeKind.Local).AddTicks(9714),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=337",
                            IsActive = true,
                            MasterId = new Guid("40e76ec7-e7e8-4a8e-8fa0-68e8f5004ab3"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 697.07m,
                            UnitsInStock = (short)52
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(1214),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=26",
                            IsActive = true,
                            MasterId = new Guid("6a937688-921b-48ce-a436-fdb2ad90c87b"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 907.21m,
                            UnitsInStock = (short)22
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(2714),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=878",
                            IsActive = true,
                            MasterId = new Guid("23424aa9-1644-493e-83b3-ebddd6e4c16a"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 318.78m,
                            UnitsInStock = (short)43
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(4209),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=641",
                            IsActive = true,
                            MasterId = new Guid("9dabf2dd-e365-4a81-b6b8-0fe587542553"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 301.81m,
                            UnitsInStock = (short)56
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(5695),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=92",
                            IsActive = true,
                            MasterId = new Guid("f1761efd-cafa-43a8-87f3-d6771a4e36a5"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 618.50m,
                            UnitsInStock = (short)57
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(7830),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("23e4ac01-725c-498f-900e-b0a5cc62cf57"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 706, DateTimeKind.Local).AddTicks(9354),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("fd3522d2-ab4b-44d6-b7a0-3b72d9b2e927"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 0, 35, 20, 707, DateTimeKind.Local).AddTicks(819),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("796123c3-267b-442b-becc-58c22bb80d70"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
