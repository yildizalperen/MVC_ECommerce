// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.MVC.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240528083759_appUser")]
    partial class appUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 305, DateTimeKind.Local).AddTicks(2513),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("77aeefb2-03a0-454d-82f0-d80b14a9763e"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 305, DateTimeKind.Local).AddTicks(6737),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("898ce7c9-d5fe-4025-b57b-0255d3dae02d"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 305, DateTimeKind.Local).AddTicks(9108),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("b74d21d8-19a5-4e08-881d-58503f0c1d49"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 309, DateTimeKind.Local).AddTicks(5320),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=944",
                            IsActive = true,
                            MasterId = new Guid("1f2a2c6b-33d2-45e2-ba94-9400e135c6a0"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 179.37m,
                            UnitsInStock = (short)75
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 309, DateTimeKind.Local).AddTicks(9761),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=22",
                            IsActive = true,
                            MasterId = new Guid("7ebd304c-4eb9-4841-acf5-f4cea4a5077f"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 62.21m,
                            UnitsInStock = (short)56
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 310, DateTimeKind.Local).AddTicks(2417),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=250",
                            IsActive = true,
                            MasterId = new Guid("f64d8dc8-b763-4fe7-9339-a2b5e05ca143"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 472.79m,
                            UnitsInStock = (short)53
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 310, DateTimeKind.Local).AddTicks(4808),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=344",
                            IsActive = true,
                            MasterId = new Guid("2449e464-c27e-4b22-b5e2-2d8e0f4ea88b"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 911.64m,
                            UnitsInStock = (short)95
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 310, DateTimeKind.Local).AddTicks(7137),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=386",
                            IsActive = true,
                            MasterId = new Guid("27ef6b24-d12e-4a6d-9599-eb87f54d9cd5"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 799.31m,
                            UnitsInStock = (short)19
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 310, DateTimeKind.Local).AddTicks(9474),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=487",
                            IsActive = true,
                            MasterId = new Guid("78367f66-de6f-4f2b-82f3-ae3be3978d6e"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 919.99m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 311, DateTimeKind.Local).AddTicks(1897),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=350",
                            IsActive = true,
                            MasterId = new Guid("a96a39d0-42eb-4292-aff4-1c6974ff6f06"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 710.11m,
                            UnitsInStock = (short)15
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 311, DateTimeKind.Local).AddTicks(4303),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=170",
                            IsActive = true,
                            MasterId = new Guid("b047acc4-948b-4b30-b1a9-4238a4721bdb"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 499.95m,
                            UnitsInStock = (short)64
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 311, DateTimeKind.Local).AddTicks(6687),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=87",
                            IsActive = true,
                            MasterId = new Guid("17f58485-858f-4122-99e5-dfdfc2e6175b"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 14.18m,
                            UnitsInStock = (short)85
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 311, DateTimeKind.Local).AddTicks(9026),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=102",
                            IsActive = true,
                            MasterId = new Guid("831951a2-8fa8-4eca-a570-46cd4024195b"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 734.59m,
                            UnitsInStock = (short)8
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 312, DateTimeKind.Local).AddTicks(1371),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1044",
                            IsActive = true,
                            MasterId = new Guid("537a260a-845e-448e-8005-827c62b15163"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 153.93m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 312, DateTimeKind.Local).AddTicks(3901),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=211",
                            IsActive = true,
                            MasterId = new Guid("e32eb667-8075-4d80-8254-6d1dbbd62a65"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 274.26m,
                            UnitsInStock = (short)83
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 312, DateTimeKind.Local).AddTicks(6172),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=121",
                            IsActive = true,
                            MasterId = new Guid("2aa68523-b686-4b27-9015-133b94abbb55"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 503.00m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 312, DateTimeKind.Local).AddTicks(8425),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=444",
                            IsActive = true,
                            MasterId = new Guid("fc9ca347-4abe-406f-b190-ec99b38778d5"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 191.12m,
                            UnitsInStock = (short)63
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 313, DateTimeKind.Local).AddTicks(754),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=987",
                            IsActive = true,
                            MasterId = new Guid("98483ddf-7ac3-42bc-b77f-bc1f2e009680"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 247.59m,
                            UnitsInStock = (short)8
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 313, DateTimeKind.Local).AddTicks(3030),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=120",
                            IsActive = true,
                            MasterId = new Guid("d330a09f-964a-4bd5-a3fe-74e397cf91c9"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 998.43m,
                            UnitsInStock = (short)60
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 313, DateTimeKind.Local).AddTicks(5287),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=291",
                            IsActive = true,
                            MasterId = new Guid("049402ed-057f-4369-907e-85f6082b5319"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 93.83m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 313, DateTimeKind.Local).AddTicks(7531),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=463",
                            IsActive = true,
                            MasterId = new Guid("2fb158e0-dad8-4988-83a2-a8e874b1c870"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 782.67m,
                            UnitsInStock = (short)80
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 313, DateTimeKind.Local).AddTicks(9777),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=411",
                            IsActive = true,
                            MasterId = new Guid("84aa3234-cfc2-4fd7-991f-a0ca26e921d8"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 908.85m,
                            UnitsInStock = (short)42
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 314, DateTimeKind.Local).AddTicks(2017),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=177",
                            IsActive = true,
                            MasterId = new Guid("c2918fa4-7e03-423c-9c4b-eea25d64e8d0"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 936.39m,
                            UnitsInStock = (short)72
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 314, DateTimeKind.Local).AddTicks(4347),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=604",
                            IsActive = true,
                            MasterId = new Guid("251bdb81-132e-4e7a-8a23-02014e54cf72"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 957.11m,
                            UnitsInStock = (short)1
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 314, DateTimeKind.Local).AddTicks(6579),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=781",
                            IsActive = true,
                            MasterId = new Guid("56da43bc-68a6-40a6-a6d6-ef01ed129671"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 953.29m,
                            UnitsInStock = (short)13
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 314, DateTimeKind.Local).AddTicks(9404),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=655",
                            IsActive = true,
                            MasterId = new Guid("60ef6adc-63a8-4373-99b7-b6209e00ff07"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 399.73m,
                            UnitsInStock = (short)1
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 315, DateTimeKind.Local).AddTicks(1662),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=62",
                            IsActive = true,
                            MasterId = new Guid("aab17deb-1fc0-4cb9-a300-30368b0f50c7"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 45.80m,
                            UnitsInStock = (short)95
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 315, DateTimeKind.Local).AddTicks(3921),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=480",
                            IsActive = true,
                            MasterId = new Guid("44672cc2-b944-46e9-a0e4-fb677340d8e1"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 40.11m,
                            UnitsInStock = (short)32
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 315, DateTimeKind.Local).AddTicks(6214),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1027",
                            IsActive = true,
                            MasterId = new Guid("213c6bb2-9046-43c6-be9a-6cb89c68c206"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 578.77m,
                            UnitsInStock = (short)14
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 315, DateTimeKind.Local).AddTicks(8409),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=774",
                            IsActive = true,
                            MasterId = new Guid("6a97641b-2dac-4a9b-8e66-8d1c0b11170b"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 923.22m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 316, DateTimeKind.Local).AddTicks(634),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=471",
                            IsActive = true,
                            MasterId = new Guid("e37c80d6-1061-41f9-a821-208d90a40a86"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 209.74m,
                            UnitsInStock = (short)67
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 316, DateTimeKind.Local).AddTicks(2834),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=312",
                            IsActive = true,
                            MasterId = new Guid("0be33f5f-19ea-43c6-9c0c-44baa3b9ff1a"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 307.98m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 316, DateTimeKind.Local).AddTicks(4996),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=136",
                            IsActive = true,
                            MasterId = new Guid("8c4414b8-2642-4099-bc6e-e54caa0ac2ea"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 966.34m,
                            UnitsInStock = (short)71
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 316, DateTimeKind.Local).AddTicks(7158),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=687",
                            IsActive = true,
                            MasterId = new Guid("11251d82-2ea7-4b1a-ab81-154488bdee0b"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 638.00m,
                            UnitsInStock = (short)28
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 316, DateTimeKind.Local).AddTicks(9319),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=922",
                            IsActive = true,
                            MasterId = new Guid("0fd95199-cab8-4b38-916b-ce0b0a6af795"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 31.50m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 317, DateTimeKind.Local).AddTicks(1472),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=990",
                            IsActive = true,
                            MasterId = new Guid("dd31d733-0624-4d2e-b266-29e7e58e5956"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 530.65m,
                            UnitsInStock = (short)65
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 317, DateTimeKind.Local).AddTicks(6097),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("a48c34a4-a4c1-4c62-b7c6-f19553a2a20c"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 317, DateTimeKind.Local).AddTicks(8253),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("aa6e11b2-0f30-433b-816f-deb3947cd341"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 28, 11, 37, 58, 318, DateTimeKind.Local).AddTicks(315),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("31915868-1722-4cb3-8e82-af81e5a6f91c"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
