// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.MVC.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    partial class ECommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 953, DateTimeKind.Local).AddTicks(7871),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("7f464add-758e-451c-93cf-bf9ae6627784"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 954, DateTimeKind.Local).AddTicks(721),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("2aacced2-9d78-4d09-a4c8-f855e848d559"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 954, DateTimeKind.Local).AddTicks(2402),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("6cc76d09-094a-4377-b39b-90f9de15a06f"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 956, DateTimeKind.Local).AddTicks(6809),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=375",
                            IsActive = true,
                            MasterId = new Guid("894fd03b-23b1-4fa5-b9cc-fa3f87210e1e"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 614.54m,
                            UnitsInStock = (short)33
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 956, DateTimeKind.Local).AddTicks(8926),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=383",
                            IsActive = true,
                            MasterId = new Guid("364c173d-fc9d-4ac3-ae39-50f11978c3a1"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 583.94m,
                            UnitsInStock = (short)23
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(599),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=90",
                            IsActive = true,
                            MasterId = new Guid("35237ae7-07f9-4464-8bbd-3f3d2efe14e5"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 866.15m,
                            UnitsInStock = (short)82
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(2205),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=404",
                            IsActive = true,
                            MasterId = new Guid("57db7647-aaad-43e5-86ec-f0bbd36d5c85"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 329.90m,
                            UnitsInStock = (short)62
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(3805),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=552",
                            IsActive = true,
                            MasterId = new Guid("bfd1d9fa-6eb3-4bdd-9aaa-1c8168fe11e0"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 170.75m,
                            UnitsInStock = (short)10
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(5704),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=150",
                            IsActive = true,
                            MasterId = new Guid("2c3c26fc-dea9-475c-8883-8a88664206a8"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 445.67m,
                            UnitsInStock = (short)46
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(7236),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=354",
                            IsActive = true,
                            MasterId = new Guid("a606a4a5-009a-4e88-b8a4-d617248f6b38"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 841.06m,
                            UnitsInStock = (short)83
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 957, DateTimeKind.Local).AddTicks(8746),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=815",
                            IsActive = true,
                            MasterId = new Guid("70dcb1e0-1ffe-42bb-910f-6723368c3b08"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 589.02m,
                            UnitsInStock = (short)45
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(252),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=670",
                            IsActive = true,
                            MasterId = new Guid("3ca256a1-67f4-4546-957b-982e9885a040"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 611.19m,
                            UnitsInStock = (short)42
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(1755),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=354",
                            IsActive = true,
                            MasterId = new Guid("3eb6aacc-4b9f-4c15-80a2-31722e9e0c13"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 125.00m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(3271),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=266",
                            IsActive = true,
                            MasterId = new Guid("07ff7ff5-07bd-46ff-860d-0346ac5e507b"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 874.31m,
                            UnitsInStock = (short)72
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(4807),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=302",
                            IsActive = true,
                            MasterId = new Guid("0cfba335-fd4d-4c4a-832a-c12204476638"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 32.69m,
                            UnitsInStock = (short)74
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(6428),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=629",
                            IsActive = true,
                            MasterId = new Guid("2029e62d-1f09-41fc-9320-3e4a19f8a392"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 376.00m,
                            UnitsInStock = (short)52
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(7928),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1075",
                            IsActive = true,
                            MasterId = new Guid("e1f7b54d-5e69-43bb-aef3-66ef46135497"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 941.58m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 958, DateTimeKind.Local).AddTicks(9424),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=674",
                            IsActive = true,
                            MasterId = new Guid("60ca5681-c1c0-45fd-a1a7-caa2d940a183"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 649.28m,
                            UnitsInStock = (short)83
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(919),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=186",
                            IsActive = true,
                            MasterId = new Guid("780a9728-c7d6-4d75-b45c-23130db110f9"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 598.64m,
                            UnitsInStock = (short)8
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(2413),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=449",
                            IsActive = true,
                            MasterId = new Guid("5a8ed91c-7d9d-4e8b-847e-419191b1d44a"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 401.36m,
                            UnitsInStock = (short)78
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(3913),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=805",
                            IsActive = true,
                            MasterId = new Guid("451f9968-8f62-4f6e-94d5-4eede6257de1"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 531.59m,
                            UnitsInStock = (short)51
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(5455),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=347",
                            IsActive = true,
                            MasterId = new Guid("9275a5e8-49be-4211-a555-02428e0cde05"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 699.10m,
                            UnitsInStock = (short)42
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(6967),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=193",
                            IsActive = true,
                            MasterId = new Guid("ad44694f-7a7f-4c3f-9b2c-646224e705bb"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 674.64m,
                            UnitsInStock = (short)1
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(8456),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=725",
                            IsActive = true,
                            MasterId = new Guid("f8900a0a-0579-43f3-b13a-d4adfb0f0079"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 106.02m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 959, DateTimeKind.Local).AddTicks(9946),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1066",
                            IsActive = true,
                            MasterId = new Guid("e2e85b7b-215e-4f61-8fa1-f20e1d60d65e"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 899.01m,
                            UnitsInStock = (short)18
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(1433),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=262",
                            IsActive = true,
                            MasterId = new Guid("75bccfe2-3547-4efc-8019-5d5f31325675"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 765.13m,
                            UnitsInStock = (short)67
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(2904),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=301",
                            IsActive = true,
                            MasterId = new Guid("6c8a7e4c-f502-40f7-9789-6fb558e2094e"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 847.74m,
                            UnitsInStock = (short)32
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(4387),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=381",
                            IsActive = true,
                            MasterId = new Guid("817a79fd-bdb6-42cd-a876-5817b9d6ea35"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 553.75m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(5931),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=319",
                            IsActive = true,
                            MasterId = new Guid("88bbb1f0-8870-4b02-936c-d4c2c564e5f1"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 532.17m,
                            UnitsInStock = (short)81
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(7417),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=15",
                            IsActive = true,
                            MasterId = new Guid("e6823585-5850-4ce5-abd3-40249ae480f7"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 914.11m,
                            UnitsInStock = (short)33
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 960, DateTimeKind.Local).AddTicks(8905),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=719",
                            IsActive = true,
                            MasterId = new Guid("b92665a6-39e6-4ecf-a660-3605414aed68"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 70.52m,
                            UnitsInStock = (short)67
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(392),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=928",
                            IsActive = true,
                            MasterId = new Guid("8fe146e2-e812-433c-8d9b-d12d969bfa63"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 702.90m,
                            UnitsInStock = (short)86
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(1888),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=615",
                            IsActive = true,
                            MasterId = new Guid("ea4777f0-c7d3-428e-9ccd-cb76dd3fcdc8"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 433.25m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(3380),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=29",
                            IsActive = true,
                            MasterId = new Guid("3fc8cf4d-3489-40db-ac6b-54779ec98430"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 32.38m,
                            UnitsInStock = (short)54
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(4860),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=555",
                            IsActive = true,
                            MasterId = new Guid("62e43089-0b32-4d70-b703-6aef65dee9ca"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 813.52m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(6352),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=752",
                            IsActive = true,
                            MasterId = new Guid("cc264dac-1e5c-41ad-a514-77e3c38309d3"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 288.59m,
                            UnitsInStock = (short)78
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 961, DateTimeKind.Local).AddTicks(8968),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("3f2bbb8d-3c48-45ec-9cae-160f0e64372d"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 962, DateTimeKind.Local).AddTicks(492),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("c7152f9e-42eb-4a47-bd10-57c15765ebd1"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 28, 15, 14, 15, 962, DateTimeKind.Local).AddTicks(1956),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("14818fb1-a6ce-4103-9100-a7070e277365"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
