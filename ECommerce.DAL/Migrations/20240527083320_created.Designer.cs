// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240527083320_created")]
    partial class created
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 810, DateTimeKind.Local).AddTicks(6514),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("409e9ce7-b5f7-4ccc-88ee-dee0c0301496"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 811, DateTimeKind.Local).AddTicks(386),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("83890739-1317-40f4-bf49-834e0373422c"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 811, DateTimeKind.Local).AddTicks(2716),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("373b69ff-3ca6-4199-a38f-580d2f112d92"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 819, DateTimeKind.Local).AddTicks(2775),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=532",
                            IsActive = true,
                            MasterId = new Guid("f54e8e70-0388-4c2b-8539-62db8b661ca9"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 814.14m,
                            UnitsInStock = (short)55
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 819, DateTimeKind.Local).AddTicks(7102),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=190",
                            IsActive = true,
                            MasterId = new Guid("67bd4838-cf17-437d-84e7-a615dda0cdf9"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 162.27m,
                            UnitsInStock = (short)36
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 819, DateTimeKind.Local).AddTicks(9545),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1072",
                            IsActive = true,
                            MasterId = new Guid("f96f65c6-4618-485d-a618-66a51bff786e"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 657.81m,
                            UnitsInStock = (short)45
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 820, DateTimeKind.Local).AddTicks(1893),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=570",
                            IsActive = true,
                            MasterId = new Guid("c3c769b5-ee2e-4344-b1ac-9999d63e239d"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 196.69m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 820, DateTimeKind.Local).AddTicks(4144),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=229",
                            IsActive = true,
                            MasterId = new Guid("5af5db49-7521-4478-99cc-cb22a118785a"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 776.95m,
                            UnitsInStock = (short)70
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 820, DateTimeKind.Local).AddTicks(6447),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=779",
                            IsActive = true,
                            MasterId = new Guid("a77c1483-7e34-4fd5-9d36-67f181302b0b"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 876.14m,
                            UnitsInStock = (short)18
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 820, DateTimeKind.Local).AddTicks(8728),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=918",
                            IsActive = true,
                            MasterId = new Guid("fa0ece68-5d9e-46a6-8648-55355c375ebe"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 580.58m,
                            UnitsInStock = (short)63
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 821, DateTimeKind.Local).AddTicks(1064),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=221",
                            IsActive = true,
                            MasterId = new Guid("8b1d82d7-8c45-4182-8dd0-fe32b8d383bd"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 578.96m,
                            UnitsInStock = (short)64
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 821, DateTimeKind.Local).AddTicks(3362),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=564",
                            IsActive = true,
                            MasterId = new Guid("d09b24e6-d7c3-43ea-97d8-5d1a67a8d2b9"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 96.74m,
                            UnitsInStock = (short)50
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 821, DateTimeKind.Local).AddTicks(5633),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=904",
                            IsActive = true,
                            MasterId = new Guid("fffadd59-eb4c-4b87-bd19-3ba47aae6295"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 863.17m,
                            UnitsInStock = (short)97
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 821, DateTimeKind.Local).AddTicks(7795),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=475",
                            IsActive = true,
                            MasterId = new Guid("d2f0071b-df25-4426-92ad-3df159358397"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 139.93m,
                            UnitsInStock = (short)24
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 821, DateTimeKind.Local).AddTicks(9979),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=412",
                            IsActive = true,
                            MasterId = new Guid("f0479a78-1236-478a-bc15-3702f826675f"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 429.82m,
                            UnitsInStock = (short)91
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 822, DateTimeKind.Local).AddTicks(2119),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=351",
                            IsActive = true,
                            MasterId = new Guid("ea636f00-718e-4455-995c-690a3118d8d1"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 619.08m,
                            UnitsInStock = (short)96
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 822, DateTimeKind.Local).AddTicks(4276),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=853",
                            IsActive = true,
                            MasterId = new Guid("7b1f82cf-10a6-4cf9-9701-3f5a13aa06d2"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 277.91m,
                            UnitsInStock = (short)84
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 822, DateTimeKind.Local).AddTicks(6416),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=100",
                            IsActive = true,
                            MasterId = new Guid("da7477f9-005d-428f-92b6-be81416ff097"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 177.38m,
                            UnitsInStock = (short)5
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 822, DateTimeKind.Local).AddTicks(8562),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=115",
                            IsActive = true,
                            MasterId = new Guid("6c4807c3-3d4e-4930-b300-ca0bb6db7af8"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 485.81m,
                            UnitsInStock = (short)44
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 823, DateTimeKind.Local).AddTicks(725),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=584",
                            IsActive = true,
                            MasterId = new Guid("4ddc5d75-a571-47ce-89f5-59fa474fd5a6"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 483.54m,
                            UnitsInStock = (short)3
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 823, DateTimeKind.Local).AddTicks(2865),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=41",
                            IsActive = true,
                            MasterId = new Guid("d8d06e3d-0c0b-4ad9-95eb-08c711be8efd"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 487.35m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 823, DateTimeKind.Local).AddTicks(5015),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=576",
                            IsActive = true,
                            MasterId = new Guid("c4f70011-85f2-489c-ba56-ca3939a88c6f"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 702.44m,
                            UnitsInStock = (short)89
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 823, DateTimeKind.Local).AddTicks(7157),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=266",
                            IsActive = true,
                            MasterId = new Guid("caf26dc9-e500-49ef-a3c4-bbe37eced6ae"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 45.50m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 823, DateTimeKind.Local).AddTicks(9314),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=561",
                            IsActive = true,
                            MasterId = new Guid("7d8e76bb-c738-45e1-a5c5-097af751886d"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 282.37m,
                            UnitsInStock = (short)91
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 824, DateTimeKind.Local).AddTicks(1437),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=631",
                            IsActive = true,
                            MasterId = new Guid("aa77b849-2557-4107-a20c-b577938057b8"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 22.61m,
                            UnitsInStock = (short)94
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 824, DateTimeKind.Local).AddTicks(3554),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=132",
                            IsActive = true,
                            MasterId = new Guid("ccc6b5df-6f26-45ee-94da-34dcdc0f446f"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 166.03m,
                            UnitsInStock = (short)99
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 824, DateTimeKind.Local).AddTicks(5670),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=71",
                            IsActive = true,
                            MasterId = new Guid("5e9ed04e-2e96-43c2-9b9d-8181a06806c7"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 278.58m,
                            UnitsInStock = (short)61
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 824, DateTimeKind.Local).AddTicks(7792),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=914",
                            IsActive = true,
                            MasterId = new Guid("13a8224d-1ed6-49aa-98f1-f48882d8a01a"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 321.36m,
                            UnitsInStock = (short)72
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 824, DateTimeKind.Local).AddTicks(9934),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=407",
                            IsActive = true,
                            MasterId = new Guid("569f3bb3-ac91-44a8-aa43-94c88d70d345"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 74.07m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 825, DateTimeKind.Local).AddTicks(2058),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1047",
                            IsActive = true,
                            MasterId = new Guid("bd2d644b-6bdf-4fed-b728-ecc4125fe3f1"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 379.70m,
                            UnitsInStock = (short)32
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 825, DateTimeKind.Local).AddTicks(4188),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=206",
                            IsActive = true,
                            MasterId = new Guid("49ffc4d4-f8d4-4a33-972a-8652c1e82fda"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 140.04m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 825, DateTimeKind.Local).AddTicks(6321),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=546",
                            IsActive = true,
                            MasterId = new Guid("3cefab0b-6210-415a-bc8c-5fdfb668376c"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 552.22m,
                            UnitsInStock = (short)30
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 825, DateTimeKind.Local).AddTicks(8441),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=45",
                            IsActive = true,
                            MasterId = new Guid("905307d5-5e84-419e-ab7c-4ab440966b4b"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 335.22m,
                            UnitsInStock = (short)61
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 826, DateTimeKind.Local).AddTicks(583),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=214",
                            IsActive = true,
                            MasterId = new Guid("cdf60464-cee0-4e22-8f0a-454d12a0da9d"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 496.40m,
                            UnitsInStock = (short)2
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 826, DateTimeKind.Local).AddTicks(2709),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1003",
                            IsActive = true,
                            MasterId = new Guid("e7d8b021-16f2-42fd-a087-e21c61b3bee4"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 184.15m,
                            UnitsInStock = (short)90
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 826, DateTimeKind.Local).AddTicks(4824),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=626",
                            IsActive = true,
                            MasterId = new Guid("0ac31150-f058-464a-a04d-dc9f966bbac4"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 160.78m,
                            UnitsInStock = (short)76
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 826, DateTimeKind.Local).AddTicks(8690),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("73a4ef58-1921-4fb8-b08d-7e6370ba0f51"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 827, DateTimeKind.Local).AddTicks(783),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("0783c6f5-275b-4dfa-9f86-febf3a7f50bc"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 27, 11, 33, 19, 827, DateTimeKind.Local).AddTicks(2792),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("39057ff4-788c-48d2-b1f8-3941a769a01f"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
