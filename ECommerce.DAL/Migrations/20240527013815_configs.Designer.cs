// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240527013815_configs")]
    partial class configs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 56, DateTimeKind.Local).AddTicks(4901),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("4b2dfcb5-ad2c-4596-b8e2-4a0845958ade"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 56, DateTimeKind.Local).AddTicks(7809),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("53f940a8-971a-4952-800b-23881025177f"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 56, DateTimeKind.Local).AddTicks(9508),
                            CreatedIpAddress = "192.168.1.21",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("246d5b3f-24cf-482e-ac1a-5567ae1b1bad"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 58, DateTimeKind.Local).AddTicks(7279),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=933",
                            IsActive = true,
                            MasterId = new Guid("a4a6c974-a0e7-4ea7-ab7b-01d44d05705c"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 583.19m,
                            UnitsInStock = (short)75
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 58, DateTimeKind.Local).AddTicks(9243),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=175",
                            IsActive = true,
                            MasterId = new Guid("6be4cba7-7825-40de-967c-f1b410bfedf7"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 774.15m,
                            UnitsInStock = (short)57
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(963),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=134",
                            IsActive = true,
                            MasterId = new Guid("618664c7-e6f1-43a1-b413-41f1edf2bdee"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 481.71m,
                            UnitsInStock = (short)58
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(2563),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=806",
                            IsActive = true,
                            MasterId = new Guid("ebaa1474-101a-4d9d-a275-c3cc11d8a749"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 704.77m,
                            UnitsInStock = (short)89
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(4130),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=446",
                            IsActive = true,
                            MasterId = new Guid("0abba301-ab9f-4d0d-979e-c1477a89530d"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 800.76m,
                            UnitsInStock = (short)33
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(5688),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=535",
                            IsActive = true,
                            MasterId = new Guid("ed98a337-cf19-453c-814e-06480a88b5ac"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 430.49m,
                            UnitsInStock = (short)66
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(7247),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=231",
                            IsActive = true,
                            MasterId = new Guid("ec9fa2a8-248b-40d4-a44b-837f1c1b7ea1"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 88.62m,
                            UnitsInStock = (short)66
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 59, DateTimeKind.Local).AddTicks(8774),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=353",
                            IsActive = true,
                            MasterId = new Guid("37a0cbe2-aa82-4623-a0c0-d5a1298d83d1"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 273.83m,
                            UnitsInStock = (short)36
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(303),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=407",
                            IsActive = true,
                            MasterId = new Guid("f1591502-00ef-4a5b-9718-67607ad14e6a"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 174.32m,
                            UnitsInStock = (short)26
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(1862),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=822",
                            IsActive = true,
                            MasterId = new Guid("005c0c16-e48e-4eba-bc43-359f205139d4"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 468.24m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(3426),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=793",
                            IsActive = true,
                            MasterId = new Guid("b1e95828-1269-4634-a1db-e7b67a90992d"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 355.64m,
                            UnitsInStock = (short)42
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(5152),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1008",
                            IsActive = true,
                            MasterId = new Guid("907cb373-7b8f-4b6b-9f7d-4f6776625e2f"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 105.66m,
                            UnitsInStock = (short)39
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(6693),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=344",
                            IsActive = true,
                            MasterId = new Guid("2ada21e9-cc33-4205-a993-13595d1cc89c"),
                            ProductName = "Car",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 208.72m,
                            UnitsInStock = (short)84
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(8228),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1004",
                            IsActive = true,
                            MasterId = new Guid("92da3631-dca0-4414-b465-8b6eacde699d"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 81.99m,
                            UnitsInStock = (short)75
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 60, DateTimeKind.Local).AddTicks(9760),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=287",
                            IsActive = true,
                            MasterId = new Guid("315e6d13-cb4f-4e51-94fd-5e4158761d4b"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 995.46m,
                            UnitsInStock = (short)3
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(1278),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=230",
                            IsActive = true,
                            MasterId = new Guid("85a7d7bd-bbc8-419d-8d93-09d0f2f14a24"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 564.07m,
                            UnitsInStock = (short)30
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(2826),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=822",
                            IsActive = true,
                            MasterId = new Guid("8cc89cb7-cae7-4567-8a5a-7f79539fa649"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 941.47m,
                            UnitsInStock = (short)46
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(4341),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=537",
                            IsActive = true,
                            MasterId = new Guid("49893ad0-96cf-4a9f-9c42-bb7246240a95"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 392.24m,
                            UnitsInStock = (short)25
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(5845),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=922",
                            IsActive = true,
                            MasterId = new Guid("ef878615-c8e8-497a-9135-5e70a9083020"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 901.96m,
                            UnitsInStock = (short)20
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(7380),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=416",
                            IsActive = true,
                            MasterId = new Guid("28ce095c-d670-4102-b99c-d74f9b83fe00"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 360.55m,
                            UnitsInStock = (short)11
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 61, DateTimeKind.Local).AddTicks(8895),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=820",
                            IsActive = true,
                            MasterId = new Guid("904bd5d6-2585-42ec-a82e-d32bf7dce032"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 531.63m,
                            UnitsInStock = (short)84
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(421),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=564",
                            IsActive = true,
                            MasterId = new Guid("663e8840-0f55-477b-b2d6-ef92b6f8465e"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 767.42m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(1935),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=59",
                            IsActive = true,
                            MasterId = new Guid("82cf8594-3468-494c-b5c9-e558f0733136"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 588.93m,
                            UnitsInStock = (short)70
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(3485),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=228",
                            IsActive = true,
                            MasterId = new Guid("a42b59c8-66b3-4fbb-a028-3d3504e0140f"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 726.78m,
                            UnitsInStock = (short)60
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(5005),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=928",
                            IsActive = true,
                            MasterId = new Guid("23c4ae20-823b-476b-b404-add5154b2bee"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 219.29m,
                            UnitsInStock = (short)91
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(6514),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=713",
                            IsActive = true,
                            MasterId = new Guid("357a2fce-89dc-4cb1-a1e1-930097ca7327"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 936.36m,
                            UnitsInStock = (short)86
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(8021),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=946",
                            IsActive = true,
                            MasterId = new Guid("7f145a2a-3716-401a-aee9-349a78febd07"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 63.67m,
                            UnitsInStock = (short)11
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 62, DateTimeKind.Local).AddTicks(9513),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=1031",
                            IsActive = true,
                            MasterId = new Guid("dd1df45b-f7aa-4e28-9a72-f02250b46682"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 388.33m,
                            UnitsInStock = (short)41
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(1012),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=10",
                            IsActive = true,
                            MasterId = new Guid("6f93e542-d683-46c2-b30c-7786a200450f"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 591.39m,
                            UnitsInStock = (short)43
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(2509),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=145",
                            IsActive = true,
                            MasterId = new Guid("cb472104-362e-4873-b46e-48c5fe6a2aa4"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 862.17m,
                            UnitsInStock = (short)42
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(4005),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=441",
                            IsActive = true,
                            MasterId = new Guid("c219c748-491f-40b8-b516-ef3272b9cce7"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 515.39m,
                            UnitsInStock = (short)25
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(5544),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=13",
                            IsActive = true,
                            MasterId = new Guid("f08c11df-4cb0-4fff-af16-4d3f6bb227c0"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 574.28m,
                            UnitsInStock = (short)89
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(7070),
                            CreatedIpAddress = "192.168.1.21",
                            ImagePath = "https://picsum.photos/640/480/?image=874",
                            IsActive = true,
                            MasterId = new Guid("856c9b9b-0d50-4fa8-97a0-5a1f3e83ec3a"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 815.84m,
                            UnitsInStock = (short)3
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 63, DateTimeKind.Local).AddTicks(9637),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("81dc5b83-6325-4b8a-8a0f-b18dc7b4ee8b"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 64, DateTimeKind.Local).AddTicks(1200),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("fd7a0248-fb9b-45e2-889d-884de6e4e5de"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "DESKTOP-22DN80G",
                            CreatedDate = new DateTime(2024, 5, 27, 4, 38, 15, 64, DateTimeKind.Local).AddTicks(2690),
                            CreatedIpAddress = "192.168.1.21",
                            IsActive = true,
                            MasterId = new Guid("db26502b-2bf8-40b8-b4fc-35aa0fc5fb18"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
