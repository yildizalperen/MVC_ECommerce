// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.MVC.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240529073157_asd")]
    partial class asd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 409, DateTimeKind.Local).AddTicks(302),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("f3b264e1-2797-42e9-94d7-2a271794725e"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 409, DateTimeKind.Local).AddTicks(4513),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("f86ea682-610d-4cc2-a1f8-0e4e271b72ba"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 409, DateTimeKind.Local).AddTicks(6868),
                            CreatedIpAddress = "10.3.21.52",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("a748642f-52f6-47ad-be83-9ba82766f6ab"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 413, DateTimeKind.Local).AddTicks(3251),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=253",
                            IsActive = true,
                            MasterId = new Guid("e191fe80-0c91-40b5-b355-1ceb0e35d804"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 651.26m,
                            UnitsInStock = (short)65
                        },
                        new
                        {
                            ID = 102,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 413, DateTimeKind.Local).AddTicks(7828),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=850",
                            IsActive = true,
                            MasterId = new Guid("34499a65-df1e-490c-b513-9de1eae7f646"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 918.01m,
                            UnitsInStock = (short)69
                        },
                        new
                        {
                            ID = 103,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 414, DateTimeKind.Local).AddTicks(491),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=814",
                            IsActive = true,
                            MasterId = new Guid("9f7f46a3-219b-4def-93e4-f8f9232ba242"),
                            ProductName = "Pants",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 50.30m,
                            UnitsInStock = (short)17
                        },
                        new
                        {
                            ID = 104,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 414, DateTimeKind.Local).AddTicks(2904),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=173",
                            IsActive = true,
                            MasterId = new Guid("05015c0e-1ead-4663-9b89-147437a7735f"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 427.71m,
                            UnitsInStock = (short)96
                        },
                        new
                        {
                            ID = 105,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 414, DateTimeKind.Local).AddTicks(5284),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=586",
                            IsActive = true,
                            MasterId = new Guid("4c16d88f-9bc7-4c04-a856-3daf43dd83c7"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 175.44m,
                            UnitsInStock = (short)66
                        },
                        new
                        {
                            ID = 106,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 414, DateTimeKind.Local).AddTicks(7688),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1037",
                            IsActive = true,
                            MasterId = new Guid("eb8432d3-2be3-40dc-8303-fd72a20d3646"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 108.51m,
                            UnitsInStock = (short)90
                        },
                        new
                        {
                            ID = 107,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 415, DateTimeKind.Local).AddTicks(106),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=904",
                            IsActive = true,
                            MasterId = new Guid("1de5b363-58a4-43dc-9825-9ce4532a401f"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 212.75m,
                            UnitsInStock = (short)51
                        },
                        new
                        {
                            ID = 108,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 415, DateTimeKind.Local).AddTicks(2464),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=671",
                            IsActive = true,
                            MasterId = new Guid("aa2ec005-af9e-4645-9133-08b84a89302b"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 496.85m,
                            UnitsInStock = (short)10
                        },
                        new
                        {
                            ID = 109,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 415, DateTimeKind.Local).AddTicks(4883),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=446",
                            IsActive = true,
                            MasterId = new Guid("12705a1d-8f9b-4ec6-9e1a-9afed0e44ec3"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 905.23m,
                            UnitsInStock = (short)79
                        },
                        new
                        {
                            ID = 110,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 415, DateTimeKind.Local).AddTicks(7256),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=938",
                            IsActive = true,
                            MasterId = new Guid("978a8ee5-1186-41b6-abc5-8ad9b415a07b"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 939.85m,
                            UnitsInStock = (short)90
                        },
                        new
                        {
                            ID = 111,
                            CategoryId = 1,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 415, DateTimeKind.Local).AddTicks(9596),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=342",
                            IsActive = true,
                            MasterId = new Guid("b3f36c3f-a8b1-459a-a69a-f371fdb63922"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 376.80m,
                            UnitsInStock = (short)31
                        },
                        new
                        {
                            ID = 201,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 416, DateTimeKind.Local).AddTicks(1909),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=446",
                            IsActive = true,
                            MasterId = new Guid("7fb7c3c3-273b-488d-8dae-244adb53d072"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 393.19m,
                            UnitsInStock = (short)25
                        },
                        new
                        {
                            ID = 202,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 416, DateTimeKind.Local).AddTicks(4187),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=356",
                            IsActive = true,
                            MasterId = new Guid("b5636def-0315-40fb-9cdc-96e07bcc12f4"),
                            ProductName = "Tuna",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 953.29m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 203,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 416, DateTimeKind.Local).AddTicks(6484),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=352",
                            IsActive = true,
                            MasterId = new Guid("22885bdb-9e1f-401d-ba91-bfc3be0ada8a"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 520.19m,
                            UnitsInStock = (short)72
                        },
                        new
                        {
                            ID = 204,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 416, DateTimeKind.Local).AddTicks(9321),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=130",
                            IsActive = true,
                            MasterId = new Guid("2c8567b9-2873-4eb4-b655-3c4944ae849d"),
                            ProductName = "Bacon",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 259.28m,
                            UnitsInStock = (short)93
                        },
                        new
                        {
                            ID = 205,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 417, DateTimeKind.Local).AddTicks(2133),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=490",
                            IsActive = true,
                            MasterId = new Guid("e469f7e1-8938-4d8a-8679-60675bca59c0"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 352.62m,
                            UnitsInStock = (short)58
                        },
                        new
                        {
                            ID = 206,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 417, DateTimeKind.Local).AddTicks(5111),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=988",
                            IsActive = true,
                            MasterId = new Guid("6889d370-ed3f-455c-895d-f6f137d7a8b5"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 863.37m,
                            UnitsInStock = (short)68
                        },
                        new
                        {
                            ID = 207,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 417, DateTimeKind.Local).AddTicks(8670),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=425",
                            IsActive = true,
                            MasterId = new Guid("26f6964b-e966-4ed8-8f22-9ce5f1e90ed3"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 925.81m,
                            UnitsInStock = (short)35
                        },
                        new
                        {
                            ID = 208,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 418, DateTimeKind.Local).AddTicks(1129),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=443",
                            IsActive = true,
                            MasterId = new Guid("12921094-ae06-4ffa-a97b-56ce90479769"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 320.42m,
                            UnitsInStock = (short)63
                        },
                        new
                        {
                            ID = 209,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 418, DateTimeKind.Local).AddTicks(3491),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=504",
                            IsActive = true,
                            MasterId = new Guid("62af03f6-8099-4e87-b0ce-15fe528293fe"),
                            ProductName = "Table",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 836.60m,
                            UnitsInStock = (short)61
                        },
                        new
                        {
                            ID = 210,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 418, DateTimeKind.Local).AddTicks(5920),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=413",
                            IsActive = true,
                            MasterId = new Guid("5b0fa68a-3447-4dc6-95d3-f84dc1effa3d"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 112.18m,
                            UnitsInStock = (short)2
                        },
                        new
                        {
                            ID = 211,
                            CategoryId = 2,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 418, DateTimeKind.Local).AddTicks(8244),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=1068",
                            IsActive = true,
                            MasterId = new Guid("f675f81d-694a-49e1-861f-7577e355ddb5"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 461.04m,
                            UnitsInStock = (short)28
                        },
                        new
                        {
                            ID = 301,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 419, DateTimeKind.Local).AddTicks(558),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=521",
                            IsActive = true,
                            MasterId = new Guid("1471baad-f5c3-4944-9a7a-383b472c8498"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 287.16m,
                            UnitsInStock = (short)39
                        },
                        new
                        {
                            ID = 302,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 419, DateTimeKind.Local).AddTicks(2855),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=634",
                            IsActive = true,
                            MasterId = new Guid("4dd5932e-f3ee-4d5b-8aaf-b1d41052510b"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 890.60m,
                            UnitsInStock = (short)94
                        },
                        new
                        {
                            ID = 303,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 419, DateTimeKind.Local).AddTicks(5167),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=905",
                            IsActive = true,
                            MasterId = new Guid("f068a6ea-1a42-46fa-a47b-6b95755be829"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 408.99m,
                            UnitsInStock = (short)96
                        },
                        new
                        {
                            ID = 304,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 419, DateTimeKind.Local).AddTicks(7454),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=357",
                            IsActive = true,
                            MasterId = new Guid("567dacae-f7b4-4fc1-bec5-32d6732cde4b"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 202.30m,
                            UnitsInStock = (short)11
                        },
                        new
                        {
                            ID = 305,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 419, DateTimeKind.Local).AddTicks(9827),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=947",
                            IsActive = true,
                            MasterId = new Guid("6273f42f-22d2-4144-ace7-23931390cb9c"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 424.19m,
                            UnitsInStock = (short)59
                        },
                        new
                        {
                            ID = 306,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 420, DateTimeKind.Local).AddTicks(2132),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=59",
                            IsActive = true,
                            MasterId = new Guid("2a717fb4-7e9e-4538-9334-6853edb447d2"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 804.65m,
                            UnitsInStock = (short)67
                        },
                        new
                        {
                            ID = 307,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 420, DateTimeKind.Local).AddTicks(4403),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=618",
                            IsActive = true,
                            MasterId = new Guid("8a83fd65-26c9-4edb-b3e7-251d9a9c8298"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 383.24m,
                            UnitsInStock = (short)85
                        },
                        new
                        {
                            ID = 308,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 420, DateTimeKind.Local).AddTicks(6659),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=386",
                            IsActive = true,
                            MasterId = new Guid("814a5d97-1cf0-4dc9-ba62-767427781329"),
                            ProductName = "Hat",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 881.75m,
                            UnitsInStock = (short)84
                        },
                        new
                        {
                            ID = 309,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 420, DateTimeKind.Local).AddTicks(8929),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=872",
                            IsActive = true,
                            MasterId = new Guid("1d92db53-3124-4643-9d59-27f86bb36b8c"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 138.07m,
                            UnitsInStock = (short)85
                        },
                        new
                        {
                            ID = 310,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 421, DateTimeKind.Local).AddTicks(1195),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=368",
                            IsActive = true,
                            MasterId = new Guid("b0958e80-4739-44b1-bb79-386cfb14ef38"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 497.17m,
                            UnitsInStock = (short)9
                        },
                        new
                        {
                            ID = 311,
                            CategoryId = 3,
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 421, DateTimeKind.Local).AddTicks(3438),
                            CreatedIpAddress = "10.3.21.52",
                            ImagePath = "https://picsum.photos/640/480/?image=724",
                            IsActive = true,
                            MasterId = new Guid("a734a194-9e95-4cb9-b228-70f0b5a5e588"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 661.28m,
                            UnitsInStock = (short)24
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 421, DateTimeKind.Local).AddTicks(8311),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("1542eceb-6f0f-42d9-8455-44843c4aaa43"),
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 422, DateTimeKind.Local).AddTicks(603),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("eb26b8bc-5290-4b39-8354-27c4b71dc81d"),
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "KDK-101-PC09-YZ",
                            CreatedDate = new DateTime(2024, 5, 29, 10, 31, 55, 422, DateTimeKind.Local).AddTicks(2761),
                            CreatedIpAddress = "10.3.21.52",
                            IsActive = true,
                            MasterId = new Guid("c00b077f-4ffc-45b8-9908-83b62c3035cf"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
